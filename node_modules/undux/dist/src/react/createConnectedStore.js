"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var __1 = require("..");
var utils_1 = require("../utils");
function createConnectedStore(initialState, effects) {
    var Context = React.createContext({ __MISSING_PROVIDER__: true });
    var Container = /** @class */ (function (_super) {
        __extends(Container, _super);
        function Container(props) {
            var _this = _super.call(this, props) || this;
            // Create store definition from initial state
            var state = props.initialState || initialState;
            _this.storeDefinition = __1.createStore(state);
            // Apply effects?
            var fx = props.effects || effects;
            if (fx) {
                fx(_this.storeDefinition);
            }
            _this.state = {
                storeSnapshot: _this.storeDefinition.getCurrentSnapshot()
            };
            _this.subscription = _this.storeDefinition.onAll().subscribe(function () {
                return _this.setState({ storeSnapshot: _this.storeDefinition.getCurrentSnapshot() });
            });
            return _this;
        }
        Container.prototype.componentWillUnmount = function () {
            this.subscription.unsubscribe();
            // Let the state get GC'd.
            // TODO: Find a more elegant way to do this.
            this.storeDefinition.storeSnapshot = null;
            this.storeDefinition = null;
        };
        Container.prototype.render = function () {
            return React.createElement(Context.Provider, { value: this.state.storeSnapshot }, this.props.children);
        };
        return Container;
    }(React.Component));
    var Consumer = function (props) {
        return React.createElement(Context.Consumer, null, function (store) {
            if (!isInitialized(store)) {
                throw Error("[Undux] Component \"" + props.displayName + "\" does not seem to be nested in an Undux <Container>. To fix this error, be sure to render the component in the <Container>...</Container> component that you got back from calling createConnectedStore().");
            }
            return props.children(store);
        });
    };
    function withStore(Component) {
        var displayName = utils_1.getDisplayName(Component);
        var f = function (props) {
            return React.createElement(Consumer, { displayName: displayName }, function (storeSnapshot) { return React.createElement(SnapshotComponent, { Component: Component, props: props, storeSnapshot: storeSnapshot }); });
        };
        f.displayName = "withStore(" + displayName + ")";
        return f;
    }
    return {
        Container: Container,
        withStore: withStore
    };
}
exports.createConnectedStore = createConnectedStore;
var SnapshotComponent = /** @class */ (function (_super) {
    __extends(SnapshotComponent, _super);
    function SnapshotComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.isSubscribedToAllFields = false;
        // https://jsperf.com/set-membership-vs-object-key-lookup
        _this.subscribedFields = {};
        _this.onGetOrSet = function (key) {
            if (_this.isSubscribedToAllFields) {
                return;
            }
            _this.subscribedFields[key] = true;
        };
        _this.onGetAll = function () {
            _this.isSubscribedToAllFields = true;
            _this.subscribedFields = {};
        };
        return _this;
    }
    SnapshotComponent.prototype.shouldComponentUpdate = function (nextProps) {
        var _this = this;
        if (this.isSubscribedToAllFields) {
            return true;
        }
        return utils_1.some(this.subscribedFields, function (_, k) { return !utils_1.equals(nextProps.storeSnapshot.get(k), _this.props.storeSnapshot.get(k)); }) || utils_1.some(nextProps.props, function (v, k) { return !utils_1.equals(v, _this.props.props[k]); });
    };
    SnapshotComponent.prototype.render = function () {
        var _a = this.props, Component = _a.Component, props = _a.props;
        var wrapper = new __1.StoreSnapshotWrapper(this.props.storeSnapshot, this.onGetOrSet, this.onGetAll, Object.assign({}, this.subscribedFields), // Be careful not to mutate
        this.isSubscribedToAllFields);
        return React.createElement(Component, __assign({ store: wrapper }, props));
    };
    return SnapshotComponent;
}(React.Component));
function isInitialized(store) {
    return !('__MISSING_PROVIDER__' in store);
}
//# sourceMappingURL=createConnectedStore.js.map