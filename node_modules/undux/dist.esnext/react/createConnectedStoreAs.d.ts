import * as React from 'react';
import { EffectsAs, Store } from '..';
import { Diff } from '../utils';
export declare type ConnectAs<States extends {
    [alias: string]: any;
}> = {
    Container: React.ComponentType<ContainerPropsAs<States>>;
    initialStates: States;
    withStores: <Props extends {
        [K in keyof States]: Store<States[K]>;
    }>(Component: React.ComponentType<Props>) => React.ComponentType<Diff<Props, {
        [K in keyof States]: Store<States[K]>;
    }>>;
};
export declare type ContainerPropsAs<States extends {
    [alias: string]: any;
}> = {
    effects?: EffectsAs<States>;
    initialStates?: States;
};
export declare function createConnectedStoreAs<States extends {
    [alias: string]: any;
}>(initialStates: States, effects?: EffectsAs<States>): ConnectAs<States>;
